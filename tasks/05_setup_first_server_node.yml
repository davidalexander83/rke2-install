---
# This task set instantiates the first server node in the cluster. It creates the
# required directory for RKE2 configuration files, # and additionally creates the
# config.yaml.d directory for non-core configurations to be applied. It then injects
# variables for systemd if required (such as proxy settings). Once this is complete,
# the rke2-server service is started, and the rke2-agent service is masked to avoid
# potential issues that may arise.
#
# The task set finishes by waiting for the first server node to be ready, and symlinking
# the kubeconfig and kubectl files to /root and a bin path for ease of management.

- name: Create config directories for RKE2
  ansible.builtin.file:
    state: directory
    path: /etc/rancher/rke2/config.yaml.d
    owner: root
    group: root
    mode: "0755"

- name: Set server taints if required
  when: rke2_cluster_type == "ha"
  ansible.builtin.set_fact:
    rke2_server_node_taints: "{{ rke2_server_node_taints }}"

- name: Create RKE2 config.yaml
  ansible.builtin.template:
    src: templates/config.yaml.j2
    dest: /etc/rancher/rke2/config.yaml
    owner: root
    group: root
    mode: "0600"

- name: Create custom kubelet config (if required)
  when: rke2_cluster_custom_kubelet_config_required | bool
  ansible.builtin.template:
    src: templates/custom_config/kubelet-config.yaml.j2
    dest: /etc/rancher/rke2/kubelet-config.yaml
    owner: root
    group: root
    mode: "0600"

- name: Create custom registry config (if required)
  when: rke2_cluster_custom_registry_config_required | bool
  ansible.builtin.template:
    src: templates/custom_config/registries.yaml.j2
    dest: /etc/rancher/rke2/registries.yaml
    owner: root
    group: root
    mode: "0600"

- name: Set proxy for RKE2 service in systemd (if required)
  when: proxy_required | bool
  ansible.builtin.template:
    src: "templates/proxy/rke2-{{ inventory_hostname['rke2_node_type'] }}.env.j2"
    dest: "{{ systemd_folder }}/rke2-server.env"
    backup: true
    owner: root
    group: root
    mode: "0644"

- name: Mask rke2-agent service on the first server
  ansible.builtin.systemd:
    name: "rke2-agent.service"
    enabled: false
    masked: true

- name: Start rke2-server service on the first server
  ansible.builtin.service:
    name: "rke2-server.service"
    state: started
    enabled: true

- name: Create .kube directory in root homedir
  ansible.builtin.file:
    path: /root/.kube
    state: directory
    owner: root
    group: root
    mode: "0700"

- name: Create symlinks for kubeconfig and kubectl
  ansible.builtin.file:
    path: "{{ item['path'] }}"
    src: "{{ item['src'] }}"
    state: link
    owner: root
    group: root
  loop:
    - path: /root/.kube/config
      src: /etc/rancher/rke2/rke2.yaml
    - path: "{{ bin_dir }}/kubectl"
      src: /var/lib/rancher/rke2/bin/kubectl

- name: Wait for the first server to be ready
  ansible.builtin.shell: "set -o pipefail {{ bin_dir }}/kubectl --kubeconfig /root/.kube/config get nodes | grep '{{ inventory_hostname }}'"
  args:
    executable: /bin/bash
  changed_when: false
  register: first_server_progress
  until: "' Ready ' in first_server_progress['stdout']"
  retries: 60
  delay: 15
